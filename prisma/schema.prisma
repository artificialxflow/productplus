// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// مدل سطوح تخفیف کاربران
model UserLevel {
  id          Int      @id @default(autoincrement())
  name        String   @unique @db.VarChar(100)
  discountPercentage Int @default(0)
  description String?  @db.Text
  users       User[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("user_levels")
}

// مدل تصویر محصول
model ProductImage {
  id        Int      @id @default(autoincrement())
  productId Int
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  url       String   @db.VarChar(500)
  alt       String?  @db.VarChar(255)
  isPrimary Boolean  @default(false)
  order     Int      @default(0)
  createdAt DateTime @default(now())

  @@map("product_images")
}

// مدل محصول
model Product {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  price       Decimal  @db.Decimal(10, 2)
  serialNumber String? @unique @db.VarChar(100)  // اضافه کردن شماره سریال
  description String?  @db.Text
  stock       Int      @default(0)
  categoryId  Int?
  category    Category? @relation(fields: [categoryId], references: [id])
  images      ProductImage[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orderItems  OrderItem[]

  @@map("products")
}

// مدل دسته‌بندی
model Category {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(100) @unique
  description String?   @db.Text
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("categories")
}

// مدل کاربر
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique @db.VarChar(255)
  name      String   @db.VarChar(100)
  password  String   @db.VarChar(255)
  phone     String?  @unique @db.VarChar(15)
  isPhoneVerified Boolean @default(false)
  otpCode   String?  @db.VarChar(6)
  otpExpires DateTime?
  role      UserRole @default(USER)
  levelId   Int?
  level     UserLevel? @relation(fields: [levelId], references: [id])
  discountPercentage Int @default(0)
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

// مدل سفارش
model Order {
  id          Int         @id @default(autoincrement())
  userId      Int
  user        User        @relation(fields: [userId], references: [id])
  status      OrderStatus @default(PENDING)
  totalAmount Decimal     @db.Decimal(10, 2)
  orderItems  OrderItem[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@map("orders")
}

// مدل آیتم‌های سفارش
model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  order     Order   @relation(fields: [orderId], references: [id])
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  price     Decimal @db.Decimal(10, 2)

  @@map("order_items")
}

// انواع کاربر
enum UserRole {
  USER
  ADMIN
}

// وضعیت سفارش
enum OrderStatus {
  PENDING
  CONFIRMED
  SHIPPED
  DELIVERED
  CANCELLED
}
